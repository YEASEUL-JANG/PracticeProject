//
//buildscript {
//	ext {
//		queryDslVersion = "5.0.0";
//	}
//}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext["hibernate.version"] = "5.6.5.Final"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	//프록시 객체 처리
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	//쿼리 모니터링(?대신 데이터값으로 나옴)
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	testImplementation 'junit:junit:4.13.1'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//query dsl
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

//	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
//	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"


}

//def querydslDir = "src/main/generated"
//
///* 10-6. JPA사용 여부와 사용할 경로를 지정*/
//
//querydsl {
//	jpa = true
//	querydslSourcesDir = querydslDir
//}
//
///* 10-7. build시 사용할 SourceSet 추가 */
//sourceSets {
//	main.java.srcDir querydslDir
//}
//
///* 10-8. querydsl이 complieClasspath를 상속하도록 설정 */
//configurations {
//	querydsl.extendsFrom compileClasspath
//}
//
///* 10-9. querydsl 컴파일시 사용할 옵션 설정 */
//compileQuerydsl {
//	options.annotationProcessorPath = configurations.querydsl
//}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
	delete file('src/main/generated')
}

tasks.named('test') {
	useJUnitPlatform()
}
